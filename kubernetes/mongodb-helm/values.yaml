auth.rootUser: mongo
auth.rootPassword: cs3219isgood
auth.databases: cs3219
externalAccess.hidden.service.type: LoadBalancer

# NAME: my-release
# LAST DEPLOYED: Tue Oct 31 15:23:04 2023
# NAMESPACE: default
# STATUS: deployed
# REVISION: 1
# TEST SUITE: None
# NOTES:
# CHART NAME: mongodb
# CHART VERSION: 14.0.14
# APP VERSION: 7.0.2

# ** Please be patient while the chart is being deployed **

# MongoDB&reg; can be accessed on the following DNS name(s) and ports from within your cluster:

#     my-release-mongodb.default.svc.cluster.local

# To get the root password run:

#     export MONGODB_ROOT_PASSWORD=$(kubectl get secret --namespace default my-release-mongodb -o jsonpath="{.data.mongodb-root-password}" | base64 -d)

# To connect to your database, create a MongoDB&reg; client container:

#     kubectl run --namespace default my-release-mongodb-client --rm --tty -i --restart='Never' --env="MONGODB_ROOT_PASSWORD=$MONGODB_ROOT_PASSWORD" --image docker.io/bitnami/mongodb:7.0.2-debian-11-r7 --command -- bash

# Then, run the following command:
#     mongosh admin --host "my-release-mongodb" --authenticationDatabase admin -u $MONGODB_ROOT_USER -p $MONGODB_ROOT_PASSWORD

# To connect to your database from outside the cluster execute the following commands:

#     kubectl port-forward --namespace default svc/my-release-mongodb 27017:27017 &
#     mongosh --host 127.0.0.1 --authenticationDatabase admin -p $MONGODB_ROOT_PASSWORD